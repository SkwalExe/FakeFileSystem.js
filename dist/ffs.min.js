!function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);throw(f=new Error("Cannot find module '"+i+"'")).code="MODULE_NOT_FOUND",f}c=n[i]={exports:{}},e[i][0].call(c.exports,function(r){return o(e[i][1][r]||r)},c,c.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}({1:[function(require,module,exports){void 0!==module&&(module.exports=class{constructor(){this.Errors={NOT_FOUND:"No such file or directory",NOT_A_REGULAR_FILE:"Not a regular file",NOT_A_DIRECTORY:"Not a directory",FILE_ALREADY_EXISTS:"File or directory already exists",SAME_FILE:"Source and destination are the same",INVALID_NAME:'Invalid file name, must ba at least one character long and cannot contain \\ / : * ? " < > |',ROOT_PROHIBITED:"You cannot perform this operation on the root directory",NO_FILENAME:"Missing file or directory name"},this.Result=class{constructor(){this.success=!1,this.error=null,this.result=null,this.errorCause=null}},this.tree=[{type:"directory",name:"/",modified:Date.now(),parent:"/",content:[]}],this.currentDirectory="/",this.getPath=function(path){const result=new this.Result;if("/"===(path=this.simplifyPath(path)))return result.success=!0,result.result=this.tree[0],result;path.startsWith("/")&&(path=path.substring(1));let currentDirectory=this.tree[0];var pathArr=path.split("/");for(let i=0;i<pathArr.length;i++){const file=pathArr[i];if("file"===currentDirectory.type)return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=currentDirectory.name,result;if(i===pathArr.length-1)return currentDirectory.content.find(f=>f.name===file)?(result.result=currentDirectory.content.find(f=>f.name===file),result.success=!0):(result.error=this.Errors.NOT_FOUND,result.errorCause=file),result;if(void 0===(currentDirectory=currentDirectory.content.find(e=>e.name===file)))return result.error=this.Errors.NOT_FOUND,result.errorCause=file,result}},this.fileExists=function(path){return this.getPath(path).success},this.isRegularFile=function(path){path=this.getPath(path);return!!path.success&&"file"===path.result.type},this.isDir=function(path){path=this.getPath(path);return!!path.success&&"directory"===path.result.type},this.getFileContent=function(path){const result=new this.Result;return this.isRegularFile(path)?(result.success=!0,result.result=this.getPath(path).result.content):(this.isDir(path)?result.error=this.Errors.NOT_A_REGULAR_FILE:result.error=this.Errors.NOT_FOUND,result.errorCause=path),result},this.getDirContent=function(path){const result=new this.Result;return this.isDir(path)?(result.success=!0,result.result=this.getPath(path).result.content):(this.isRegularFile(path)?result.error=this.Errors.NOT_A_DIRECTORY:result.error=this.Errors.NOT_FOUND,result.errorCause=path),result},this.writeFile=function(path,content,append=!1){const result=new this.Result;if(this.fileExists(path)){if(this.isRegularFile(path)){const file=this.getPath(path).result;return append?file.content+=content:file.content=content,result.success=!0,result.result=file,result}return result.error=this.Errors.NOT_A_REGULAR_FILE,result.errorCause=path,result}return result.success=!0,result.result=this.createFile(path,content),result},this.createFile=function(path,filename,content=""){const result=new this.Result;if(!filename)return result.error=this.Errors.NO_FILENAME,result;if(path=this.simplifyPath(path),!this.isValidName(filename))return result.error=this.Errors.INVALID_NAME,result.errorCause=filename,result;if(this.fileExists(path+"/"+filename))return result.error=this.Errors.FILE_ALREADY_EXISTS,result.errorCause=this.simplifyPath(path+"/"+filename),result;filename={type:"file",name:filename,modified:Date.now(),parent:path,content:content};if(!this.fileExists(path))return result.error=this.Errors.NOT_FOUND,result.errorCause=path,result;if(!this.isDir(path))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=path,result;const parent=this.getPath(path).result;return parent.content.push(filename),result.success=!0,result.result=filename,result},this.createDir=function(path,dirname){const result=new this.Result;if(!dirname)return result.error=this.Errors.NO_FILENAME,result;if(path=this.simplifyPath(path),!this.isValidName(dirname))return result.error=this.Errors.INVALID_NAME,result.errorCause=dirname,result;if(this.fileExists(path+"/"+dirname))return result.error=this.Errors.FILE_ALREADY_EXISTS,result.errorCause=this.simplifyPath(path+"/"+dirname),result;dirname={type:"directory",name:dirname,modified:Date.now(),parent:path,content:[]};if(!this.fileExists(path))return result.error=this.Errors.NOT_FOUND,result.errorCause=path,result;if(!this.isDir(path))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=path,result;const parent=this.getPath(path).result;return parent.content.push(dirname),result.success=!0,result.result=dirname,result},this.simplifyPath=function(path){if(""===(path=path.trim()))return this.currentDirectory;for(;-1!==path.indexOf("//");)path=path.replace(/\/\//g,"/");if("/"===path)return"/";var parent;if((path=(path=path.endsWith("/")?path.substring(0,path.length-1):path).startsWith("./")?this.simplifyPath(this.currentDirectory+"/"+path.substring(2)):path).startsWith("../")&&(parent=this.getPath(this.currentDirectory).result,path=this.simplifyPath(parent.parent+path.substring(2))),!path.startsWith("/"))return this.simplifyPath(this.currentDirectory+"/"+path);let pathArr=path.split("/");pathArr=pathArr.filter(e=>""!==e);const result=[];for(let i=0;i<pathArr.length;i++){var file=pathArr[i];"."!==file&&(".."===file?0<result.length&&result.pop():result.push(file))}return"/"+result.join("/")},this.delete=function(path){const result=new this.Result;if("/"===path)return result.error=this.Errors.ROOT_PROHIBITED,result.errorCause=path,result;if(!this.fileExists(path))return result.error=this.Errors.NOT_FOUND,result.errorCause=path,result;const file=this.getPath(path).result,parent=this.getPath(file.parent).result;return parent.content=parent.content.filter(e=>e!==file),result.success=!0,result.result=file,result},this.getParent=function(path){const result=new this.Result;return path=(path=this.simplifyPath(path)).substring(0,path.lastIndexOf("/")),this.fileExists(path=""===path?"/":path)?(result.result=this.getPath(path).result,result.success=!0):(result.error=this.Errors.NOT_FOUND,result.errorCause=path),result},this.basename=function(path){return"/"===(path=this.simplifyPath(path))?"/":path.substring(path.lastIndexOf("/")+1)},this.getParentPath=function(path){return"/"===(path=this.simplifyPath(path))?"/":path.substring(0,path.lastIndexOf("/"))},this.getFullPath=function(file){return this.simplifyPath(file.parent+"/"+file.name)},this.isSameFile=function(path1,path2){return(path1=this.simplifyPath(path1))===(path2=this.simplifyPath(path2))},this.isValidName=function(name){return!(0<!(name=name.trim()).length)&&("."!==name&&".."!==name&&!/[\\/:*?"<>|']/.test(name))},this.copy=function(source,destination){const result=new this.Result;if("/"===this.simplifyPath(source))return result.error=this.Errors.ROOT_PROHIBITED,result.errorCause=source,result;if(!this.fileExists(source))return result.error=this.Errors.NOT_FOUND,result.errorCause=source,result;if(this.isSameFile(source,destination))return result.error=this.Errors.SAME_FILE,result.errorCause=source,result;source=this.getPath(source).result;if(this.fileExists(destination)){if(!this.isDir(destination))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=destination,result;if(this.fileExists(destination+"/"+source.name))return result.error=this.Errors.FILE_ALREADY_EXISTS,result.errorCause=destination+"/"+source.name,result;destination=this.getPath(destination).result;const newFile={name:source.name,type:source.type,content:source.content,parent:destination.parent+"/"+destination.name,modified:Date.now()};return destination.content.push(newFile),result.success=!0,result.result=newFile,result}{if(!this.getParent(destination).success)return result.error=this.Errors.NOT_FOUND,result.errorCause=this.getParentPath(destination),result;if(!this.isDir(this.getParentPath(destination)))return result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=this.getParentPath(destination),result;const destinationParent=this.getParent(destination).result;destination={name:this.basename(destination),type:source.type,content:source.content,modified:Date.now(),parent:this.getFullPath(destinationParent)};return destinationParent.content.push(destination),result.success=!0,result.result=destination,result}},this.move=function(source,destination){const result=new this.Result;source=this.simplifyPath(source),destination=this.simplifyPath(destination);destination=this.copy(source,destination);return destination.success?(this.delete(source),result.success=!0,result.result=destination.result):(result.error=destination.error,result.errorCause=destination.errorCause),result},this.changeDir=function(path){const result=new this.Result;return path=this.simplifyPath(path),this.fileExists(path)?this.isDir(path)?(this.currentDirectory=path,result.success=!0,result.result=path):(result.error=this.Errors.NOT_A_DIRECTORY,result.errorCause=path):(result.error=this.Errors.NOT_FOUND,result.errorCause=path),result}}})},{}]},{},[1]);
