(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.FFS=f()}})(function(){var define,module,exports;return function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){class FFS{constructor(){this.Errors={NOT_FOUND:"No such file or directory",NOT_A_REGULAR_FILE:"Not a regular file",NOT_A_DIRECTORY:"Not a directory",FILE_ALREADY_EXISTS:"File or directory already exists",SAME_FILE:"Source and destination are the same",INVALID_NAME:'Invalid file name, must ba at least one character long and cannot contain \\ / : * ? " < > |',ROOT_PROHIBITED:"You cannot perform this operation on the root directory",NO_FILENAME:"Missing file or directory name"};this.Result=class{constructor(){this.success=false;this.error=null;this.result=null;this.errorCause=null}};this.tree=[{type:"directory",name:"/",modified:Date.now(),parent:"/",content:[]}];this.currentDirectory="/";this.getPath=function(path){const result=new this.Result;path=this.simplifyPath(path);if(path==="/"){result.success=true;result.result=this.tree[0];return result}if(path.startsWith("/")){path=path.substring(1)}let currentDirectory=this.tree[0];const pathArr=path.split("/");for(let i=0;i<pathArr.length;i++){const file=pathArr[i];if(currentDirectory.type==="file"){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=currentDirectory.name;return result}if(i===pathArr.length-1){if(currentDirectory.content.find(f=>f.name===file)){result.result=currentDirectory.content.find(f=>f.name===file);result.success=true}else{result.error=this.Errors.NOT_FOUND;result.errorCause=file}return result}if((currentDirectory=currentDirectory.content.find(e=>e.name===file))===undefined){result.error=this.Errors.NOT_FOUND;result.errorCause=file;return result}}};this.fileExists=function(path){const result=this.getPath(path);return result.success};this.isRegularFile=function(path){const result=this.getPath(path);if(result.success){return result.result.type==="file"}return false};this.isDir=function(path){const result=this.getPath(path);if(result.success){return result.result.type==="directory"}return false};this.getFileContent=function(path){const result=new this.Result;if(this.isRegularFile(path)){result.success=true;result.result=this.getPath(path).result.content;return result}else if(this.isDir(path)){result.error=this.Errors.NOT_A_REGULAR_FILE;result.errorCause=path;return result}else{result.error=this.Errors.NOT_FOUND;result.errorCause=path;return result}};this.getDirContent=function(path){const result=new this.Result;if(this.isDir(path)){result.success=true;result.result=this.getPath(path).result.content;return result}else if(this.isRegularFile(path)){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=path;return result}else{result.error=this.Errors.NOT_FOUND;result.errorCause=path;return result}};this.writeFile=function(path,content,append=false){const result=new this.Result;if(this.fileExists(path)){if(this.isRegularFile(path)){const file=this.getPath(path).result;if(append){file.content+=content}else{file.content=content}result.success=true;result.result=file;return result}else{result.error=this.Errors.NOT_A_REGULAR_FILE;result.errorCause=path;return result}}else{result.success=true;result.result=this.createFile(path,content);return result}};this.createFile=function(path,filename,content=""){const result=new this.Result;if(!filename){result.error=this.Errors.NO_FILENAME;return result}path=this.simplifyPath(path);if(!this.isValidName(filename)){result.error=this.Errors.INVALID_NAME;result.errorCause=filename;return result}if(this.fileExists(path+"/"+filename)){result.error=this.Errors.FILE_ALREADY_EXISTS;result.errorCause=this.simplifyPath(path+"/"+filename);return result}const file={type:"file",name:filename,modified:Date.now(),parent:path,content:content};if(!this.fileExists(path)){result.error=this.Errors.NOT_FOUND;result.errorCause=path;return result}else if(!this.isDir(path)){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=path;return result}const parent=this.getPath(path).result;parent.content.push(file);result.success=true;result.result=file;return result};this.createDir=function(path,dirname){const result=new this.Result;if(!dirname){result.error=this.Errors.NO_FILENAME;return result}path=this.simplifyPath(path);if(!this.isValidName(dirname)){result.error=this.Errors.INVALID_NAME;result.errorCause=dirname;return result}if(this.fileExists(path+"/"+dirname)){result.error=this.Errors.FILE_ALREADY_EXISTS;result.errorCause=this.simplifyPath(path+"/"+dirname);return result}const dir={type:"directory",name:dirname,modified:Date.now(),parent:path,content:[]};if(!this.fileExists(path)){result.error=this.Errors.NOT_FOUND;result.errorCause=path;return result}else if(!this.isDir(path)){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=path;return result}const parent=this.getPath(path).result;parent.content.push(dir);result.success=true;result.result=dir;return result};this.simplifyPath=function(path){path=path.trim();if(path===""){return this.currentDirectory}while(path.indexOf("//")!==-1){path=path.replace(/\/\//g,"/")}if(path==="/"){return"/"}if(path.endsWith("/")){path=path.substring(0,path.length-1)}if(path.startsWith("./")){path=this.simplifyPath(this.currentDirectory+"/"+path.substring(2))}if(path.startsWith("../")){const parent=this.getPath(this.currentDirectory).result;path=this.simplifyPath(parent.parent+path.substring(2))}if(!path.startsWith("/")){return this.simplifyPath(this.currentDirectory+"/"+path)}let pathArr=path.split("/");pathArr=pathArr.filter(e=>e!=="");const result=[];for(let i=0;i<pathArr.length;i++){const file=pathArr[i];if(file==="."){continue}if(file===".."){if(result.length>0){result.pop()}continue}result.push(file)}return"/"+result.join("/")};this.delete=function(path){const result=new this.Result;if(path==="/"){result.error=this.Errors.ROOT_PROHIBITED;result.errorCause=path;return result}if(!this.fileExists(path)){result.error=this.Errors.NOT_FOUND;result.errorCause=path;return result}const file=this.getPath(path).result;const parent=this.getPath(file.parent).result;parent.content=parent.content.filter(e=>e!==file);result.success=true;result.result=file;return result};this.getParent=function(path){const result=new this.Result;path=this.simplifyPath(path);path=this.getParentPath(path);if(path===""){path="/"}if(!this.fileExists(path)){result.error=this.Errors.NOT_FOUND;result.errorCause=path;return result}if(!this.isDir(path)){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=path;return result}result.result=this.getPath(path).result;result.success=true;return result};this.basename=function(path){path=this.simplifyPath(path);if(path==="/"){return"/"}return path.substring(path.lastIndexOf("/")+1)};this.getParentPath=function(path){path=this.simplifyPath(path);if(path==="/"){return"/"}return path.substring(0,path.lastIndexOf("/"))};this.getFullPath=function(file){return this.simplifyPath(file.parent+"/"+file.name)};this.isSameFile=function(path1,path2){path1=this.simplifyPath(path1);path2=this.simplifyPath(path2);return path1===path2};this.isValidName=function(name){name=name.trim();if(!name.length>0){return false}if(name==="."||name===".."){return false}if(/[\\/:*?"<>|']/.test(name)){return false}return true};this.copy=function(source,destination){const result=new this.Result;if(this.simplifyPath(source)==="/"){result.error=this.Errors.ROOT_PROHIBITED;result.errorCause=source;return result}if(!this.fileExists(source)){result.error=this.Errors.NOT_FOUND;result.errorCause=source;return result}if(this.isSameFile(source,destination)){result.error=this.Errors.SAME_FILE;result.errorCause=source;return result}const file=this.getPath(source).result;if(!this.fileExists(destination)){if(!this.getParent(destination).success){result.error=this.Errors.NOT_FOUND;result.errorCause=this.getParentPath(destination);return result}if(!this.isDir(this.getParentPath(destination))){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=this.getParentPath(destination);return result}const destinationParent=this.getParent(destination).result;const newFile={name:this.basename(destination),type:file.type,content:file.content,modified:Date.now(),parent:this.getFullPath(destinationParent)};destinationParent.content.push(newFile);result.success=true;result.result=newFile;return result}else{if(!this.isDir(destination)){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=destination;return result}if(this.fileExists(destination+"/"+file.name)){result.error=this.Errors.FILE_ALREADY_EXISTS;result.errorCause=destination+"/"+file.name;return result}destination=this.getPath(destination).result;const newFile={name:file.name,type:file.type,content:file.content,parent:destination.parent+"/"+destination.name,modified:Date.now()};destination.content.push(newFile);result.success=true;result.result=newFile;return result}};this.move=function(source,destination){const result=new this.Result;source=this.simplifyPath(source);destination=this.simplifyPath(destination);const operation=this.copy(source,destination);if(!operation.success){result.error=operation.error;result.errorCause=operation.errorCause;return result}this.delete(source);result.success=true;result.result=operation.result;return result};this.changeDir=function(path){const result=new this.Result;path=this.simplifyPath(path);if(!this.fileExists(path)){result.error=this.Errors.NOT_FOUND;result.errorCause=path;return result}if(!this.isDir(path)){result.error=this.Errors.NOT_A_DIRECTORY;result.errorCause=path;return result}this.currentDirectory=path;result.success=true;result.result=path;return result}}CWD(){return this.currentDirectory}}if(typeof module!=="undefined"){module.exports=FFS}},{}]},{},[1])(1)});
